<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="default.xsl"?>
<fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>750</fr:anchor><fr:taxon>Proof</fr:taxon><fr:addr>#246</fr:addr><fr:route>unstable-246.xml</fr:route><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month><fr:day>21</fr:day></fr:date><fr:authors><fr:author><fr:link
href="trebor.xml"
type="local"
addr="trebor">Trebor</fr:link></fr:author></fr:authors><fr:parent>ualg-000I</fr:parent></fr:frontmatter><fr:mainmatter>
  <fr:p>
    By definition, we just need to prove the functor <fr:tex>{\mathcal{C}}^M \to {\mathcal{C}}</fr:tex> creates these limits and colimits. Given a diagram <fr:tex>(M X_i \xrightarrow{\alpha_i} X_i)</fr:tex> in <fr:tex>{\mathcal{C}}^M</fr:tex>, we can simply define an <fr:tex>M</fr:tex>-algebra structure on <fr:tex>\lim X_i</fr:tex> by assigning <fr:tex>M(\lim X_i) \to \lim X_i</fr:tex> the obvious map. This is the limit of the original diagram by a simple diagram chase, hence it is lifted. The cones over the diagram are determined by their image under the forgetful functor, so the lift is unique, which means the limit is trivially reflected.
  </fr:p>

  <fr:p>
    For colimits, if <fr:tex>M</fr:tex> preserves a colimit, then we can similarly define an algebra structure as <fr:tex>M(\operatorname*{colim} X_i) \cong \operatorname*{colim} M X_i \to \operatorname*{colim} X_i</fr:tex>. The lift is also unique, which means it is reflected.
  </fr:p>
</fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>748</fr:anchor><fr:taxon>Theorem</fr:taxon><fr:addr>ualg-000I</fr:addr><fr:route>ualg-000I.xml</fr:route><fr:title>Limits and colimits created by a monadic functor</fr:title><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month><fr:day>21</fr:day></fr:date><fr:authors><fr:author><fr:link
href="trebor.xml"
type="local"
addr="trebor">Trebor</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>
  A <fr:link
href="ualg-000A.xml"
type="local"
addr="ualg-000A">monadic functor</fr:link> <fr:link
href="ualg-000G.xml"
type="local"
addr="ualg-000G">creates</fr:link> all limits. It also creates all colimits preserved by the monad.
</fr:p>
  
    
    <fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="false"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>746</fr:anchor><fr:taxon>Proof</fr:taxon><fr:addr>#246</fr:addr><fr:route>unstable-246.xml</fr:route><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month><fr:day>21</fr:day></fr:date><fr:authors><fr:author><fr:link
href="trebor.xml"
type="local"
addr="trebor">Trebor</fr:link></fr:author></fr:authors><fr:parent>ualg-000I</fr:parent></fr:frontmatter><fr:mainmatter>
  <fr:p>
    By definition, we just need to prove the functor <fr:tex>{\mathcal{C}}^M \to {\mathcal{C}}</fr:tex> creates these limits and colimits. Given a diagram <fr:tex>(M X_i \xrightarrow{\alpha_i} X_i)</fr:tex> in <fr:tex>{\mathcal{C}}^M</fr:tex>, we can simply define an <fr:tex>M</fr:tex>-algebra structure on <fr:tex>\lim X_i</fr:tex> by assigning <fr:tex>M(\lim X_i) \to \lim X_i</fr:tex> the obvious map. This is the limit of the original diagram by a simple diagram chase, hence it is lifted. The cones over the diagram are determined by their image under the forgetful functor, so the lift is unique, which means the limit is trivially reflected.
  </fr:p>

  <fr:p>
    For colimits, if <fr:tex>M</fr:tex> preserves a colimit, then we can similarly define an algebra structure as <fr:tex>M(\operatorname*{colim} X_i) \cong \operatorname*{colim} M X_i \to \operatorname*{colim} X_i</fr:tex>. The lift is also unique, which means it is reflected.
  </fr:p>
</fr:mainmatter></fr:tree>
  
</fr:mainmatter></fr:tree></fr:context><fr:related></fr:related><fr:backlinks></fr:backlinks><fr:references></fr:references></fr:backmatter></fr:tree>