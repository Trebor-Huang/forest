<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/forest/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/forest/">
  <fr:frontmatter>
    <fr:authors>
      <fr:author>
        <fr:link href="/forest/trebor/" title="Trebor" uri="https://trebor-huang.github.io/forest/trebor/" display-uri="trebor" type="local">Trebor</fr:link>
      </fr:author>
    </fr:authors>
    <fr:date>
      <fr:year>2024</fr:year>
      <fr:month>4</fr:month>
      <fr:day>21</fr:day>
    </fr:date>
    <fr:uri>https://trebor-huang.github.io/forest/ualg-000K/</fr:uri>
    <fr:display-uri>ualg-000K</fr:display-uri>
    <fr:route>/forest/ualg-000K/</fr:route>
    <fr:title text="free completely distributive complete Boolean algebras">free completely distributive complete Boolean algebras</fr:title>
  </fr:frontmatter>
  <fr:mainmatter>
    <html:p>
  An element of a free <fr:link href="/forest/ualg-000J/" title="completely distributive complete Boolean algebra" uri="https://trebor-huang.github.io/forest/ualg-000J/" display-uri="ualg-000J" type="local">CDCBA</fr:link> over the set <fr:tex display="inline"><![CDATA[X]]></fr:tex> is an expression made out of joins, meets and negation, with literals from <fr:tex display="inline"><![CDATA[X]]></fr:tex>. We can push the negation in and use distributivity to put the expression into <fr:link href="https://en.wikipedia.org/wiki/Disjunctive_normal_form" type="external">disjunctive normal form</fr:link>. The clauses can be represented by functions <fr:tex display="inline"><![CDATA[X \to  \{\top , \bot , ?\}]]></fr:tex> representing a literal appearing positively, negatively or not appearing in the conjunction.
</html:p>
    <html:p>
  If a literal <fr:tex display="inline"><![CDATA[b]]></fr:tex> does not appear in a clause, we can take its conjunction with <fr:tex display="inline"><![CDATA[\top  = b \lor  \neg  b]]></fr:tex> and expand using distributivity. This ensures every literal appears either positively or negatively, so the expressions are now represented by a double powerset of <fr:tex display="inline"><![CDATA[X]]></fr:tex>, where the inner powerset records which literals appear positively in a clause, and the outer powerset represents the set of clauses.
</html:p>
    <html:p>
  In fact, such a representation is unique. We just need to show that the double powerset forms a CDCBA. Disjunction is simply a union. Negation is given by the complement. Conjunction is given by an intersection. We can verify that the required identities all hold. Hence the monad for CDCBAs is the double powerset monad, corresponding to the adjunction <fr:tex display="inline"><![CDATA[\mathcal {P}^{\textrm {op}} \dashv  \mathcal {P}]]></fr:tex> via <fr:link href="/forest/ualg-000L/" title="completely distributive complete Boolean algebras are powersets" uri="https://trebor-huang.github.io/forest/ualg-000L/" display-uri="ualg-000L" type="local">Theorem <fr:contextual-number uri="https://trebor-huang.github.io/forest/ualg-000L/" display-uri="ualg-000L" /></fr:link>.
</html:p>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/forest/trebor/" title="Trebor" uri="https://trebor-huang.github.io/forest/trebor/" display-uri="trebor" type="local">Trebor</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2024</fr:year>
              <fr:month>4</fr:month>
              <fr:day>21</fr:day>
            </fr:date>
            <fr:uri>https://trebor-huang.github.io/forest/ualg-000J/</fr:uri>
            <fr:display-uri>ualg-000J</fr:display-uri>
            <fr:route>/forest/ualg-000J/</fr:route>
            <fr:title text="completely distributive complete Boolean algebra">completely distributive complete Boolean algebra</fr:title>
            <fr:taxon>Definition</fr:taxon>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>
  A <html:strong>completely distributive complete Boolean algebra</html:strong> is a Boolean algebra with arbitrary join and meet that distribute over each other.
</html:p>
          </fr:mainmatter>
        </fr:tree>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/forest/trebor/" title="Trebor" uri="https://trebor-huang.github.io/forest/trebor/" display-uri="trebor" type="local">Trebor</fr:link>
              </fr:author>
            </fr:authors>
            <fr:date>
              <fr:year>2024</fr:year>
              <fr:month>4</fr:month>
              <fr:day>21</fr:day>
            </fr:date>
            <fr:uri>https://trebor-huang.github.io/forest/ualg-000L/</fr:uri>
            <fr:display-uri>ualg-000L</fr:display-uri>
            <fr:route>/forest/ualg-000L/</fr:route>
            <fr:title text="completely distributive complete Boolean algebras are powersets">completely distributive complete Boolean algebras are powersets</fr:title>
            <fr:taxon>Theorem</fr:taxon>
          </fr:frontmatter>
          <fr:mainmatter><html:p>
  Every <fr:link href="/forest/ualg-000J/" title="completely distributive complete Boolean algebra" uri="https://trebor-huang.github.io/forest/ualg-000J/" display-uri="ualg-000J" type="local">completely distributive complete Boolean algebra</fr:link> is isomorphic to the set algebra of a powerset, and homomorphisms are given by inverse image map. In other words, the category of CDCBA is isomorphic to <fr:tex display="inline"><![CDATA[\mathsf {Set}^{\textrm {op}}]]></fr:tex> and the forgetful functor is given by the powerset <fr:tex display="inline"><![CDATA[\mathcal {P}(X) = 2^X]]></fr:tex>.
</html:p>
  
    
    <fr:tree show-metadata="false" toc="false"><fr:frontmatter><fr:authors><fr:author><fr:link href="/forest/trebor/" title="Trebor" uri="https://trebor-huang.github.io/forest/trebor/" display-uri="trebor" type="local">Trebor</fr:link></fr:author></fr:authors><fr:date><fr:year>2024</fr:year><fr:month>4</fr:month><fr:day>21</fr:day></fr:date><fr:taxon>Proof</fr:taxon></fr:frontmatter><fr:mainmatter>
  <html:p>
    Consider the set of <html:em>atoms</html:em> <fr:tex display="inline"><![CDATA[A]]></fr:tex>, defined as minimal non-bottom elements. It suffices to prove the algebra is <html:em>atomic</html:em>, i.e. every non-bottom element has an atom below it. This is because we can remove all the atoms that an element contains, and the result must be <fr:tex display="inline"><![CDATA[\bot ]]></fr:tex>. So every element is given by a join of atoms. Such a join must be unique, since the intersection of different atoms is empty, so given two ways to write an element as a join of atoms, we take the intersection and see that they must agree. This shows that the elements are in bijection with <fr:tex display="inline"><![CDATA[\mathcal {P}(A)]]></fr:tex>, with joins, meets and complements given by unions, intersections and complements, respectively.
  </html:p>

  <html:p>
    To show atomicity, consider <fr:tex display="block"><![CDATA[\top  = \bigwedge _{b \in  B} (b \lor  \neg  b) = \bigvee _{S \subseteq  B} \left [ \bigwedge _{b \in  S} b \wedge  \bigwedge _{b \notin  S} \neg  b \right ].]]></fr:tex> Consider the disjunctive clauses in here not equal to <fr:tex display="inline"><![CDATA[\bot ]]></fr:tex> (which must exist unless <fr:tex display="inline"><![CDATA[\top  = \bot ]]></fr:tex> which trivially satisfies the requirements). They must be atoms because any element <fr:tex display="inline"><![CDATA[x]]></fr:tex> strictly below them must be below all the conjunctive items, so either <fr:tex display="inline"><![CDATA[x < x]]></fr:tex> or <fr:tex display="inline"><![CDATA[x < \neg  x]]></fr:tex>. The former is absurd and the latter implies <fr:tex display="inline"><![CDATA[x = \bot ]]></fr:tex>.
  </html:p>

  <html:p>
    Taking the meet of the equation with an arbitrary element <fr:tex display="inline"><![CDATA[x]]></fr:tex> gives <fr:tex display="block"><![CDATA[x = \bigvee _{S \subseteq  B} \left [x \wedge  \bigwedge _{b \in  S} b \wedge  \bigwedge _{b \notin  S} \neg  b \right ].]]></fr:tex> If there are no atoms <fr:tex display="inline"><![CDATA[a \le  x]]></fr:tex>, then all the clauses must be <fr:tex display="inline"><![CDATA[\bot ]]></fr:tex> meaning <fr:tex display="inline"><![CDATA[x = \bot ]]></fr:tex>. This finishes the proof.
  </html:p>
</fr:mainmatter></fr:tree>
  
</fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
