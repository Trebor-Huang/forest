\date{2024-04-04}
\title{Grothendieck coverages and Lawvere–Tierney operators}
\author{trebor}
\import{common}

\p{
  Consider a [[algm-001L]] on a presheaf category. Then we may calculate the subobject classifier as in \ref{algm-001M}.
}

\p{
  By the definition of subobject classifiers, a [[algm-001L]] can be equivalently expressed as a subobject #{J \subseteq \Omega}. Translating the condition of preserving finite intersections, it needs to contain the improper sieve, be upwards closed and closed under finite intersections. And #{j \compose j = j} implies the following pullback square:
  \tikzcd{\startverb%tex
    J & J \\
    \Omega & \Omega
    \arrow[hook, from=1-2, to=2-2]
    \arrow["j"', from=2-1, to=2-2]
    \arrow[hook, from=1-1, to=2-1]
    \arrow[from=1-1, to=1-2]
    \arrow["\lrcorner"{anchor=center, pos=0.125}, draw=none, from=1-1, to=2-2]
  \stopverb}
  In other words, a sieve is contained in #{J} iff its image under #{j} is also contained in #{J}. Unfolding this, a sieve #{S} is contained in #{J} iff the arrows #{g} such that #{g^* S} is contained in #{J} also form a sieve in #{J}. Looking at the definition of a [[algm-001A]], we see that they are equivalent, if we regard #{J} as picking out the covering sieves.
}

\p{
  In the operator form #{j}, it takes in a sieve #{S} and outputs the sieve #{j(S)} consisting of all the subobjects #{S} can cover, or equivalently it outputs the largest sieve that covers the “same portion” of the object.
}
