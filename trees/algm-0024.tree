\date{2024-12-25}
\title{sheafification as a higher inductive type}
\author{trebor}
\import{common}

\p{
  Given a [[algm-001L]], we can define [[algm-001J]], and more generally #{\infty}-sheafification, as a higher inductive type. Intuitively, it can be thought of as extending a monad on propositions to arbitrary types. The sheafification #{X^{++}} of #{X} is generated by an inclusion map #{\eta : X \to X^{++}}, a free extension of the bind operator #{\beta : \forall (p : \Omega), j(p) \to (p \to X^{++}) \to X^{++}} and the only relevant monad law
  ##{\beta(u, \lambda \_. v) = v.}
  We can equivalently state this as #{g = \beta(-, f)} being the unique function satisfying
  ##{\forall(\star : p), g(\eta(\star)) = f(\star),}
  which is closer to the usual sheaf requirement.
}

\p{
  As we said, #{(-)^{++}} is a monad with the unit given by #{\eta}. The binding operator is implemented by ##{\begin{aligned}
    \beta(\eta(x), f) &= f(x) \\
    \beta(\beta(\star, g), f) &= \beta(\star, \lambda x. \beta(g(x), f))
  \end{aligned}}
  where we used the same name #{\beta} for all the bind operators.
}
